generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administradores {
  matricula           Int       @id(map: "pk_administrador") @default(autoincrement())
  cargo               String    @db.VarChar(20)
  dataadmissao        DateTime  @db.Date
  datarecisao         DateTime? @db.Date
  statusadministrador Boolean
  cpf                 String    @db.VarChar(14)
  pessoas             pessoas   @relation(fields: [cpf], references: [cpf], onDelete: NoAction, onUpdate: NoAction, map: "fk_adm_pessoa")
}

model clientes {
  numero         Int     @id(map: "pk_usuario") @default(autoincrement())
  empresa        String  @db.VarChar(20)
  statususuarios Boolean
  cpf            String  @db.VarChar(14)
  pessoas        pessoas @relation(fields: [cpf], references: [cpf], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_pessoa")
}

model experimentos {
  numerolote              Int      @id(map: "pk_experimento")
  dataexperimento         DateTime @db.Date
  datavalidadeexperimento DateTime @db.Date
  peso                    Float
  volume                  Float
  presencasm              Boolean
  temperaturalote         Float
  ph                      Float
  condicaoexperimento     String   @db.VarChar(20)
  obsexperimento          String   @db.VarChar(255)
  matriculatecnico        Int
  tecnicos                tecnicos @relation(fields: [matriculatecnico], references: [matricula], onDelete: NoAction, onUpdate: NoAction, map: "fk_experimento_tecnico")
}

model pessoas {
  cpf             String            @id(map: "pk_pessoa") @db.VarChar(14)
  nome            String            @db.VarChar(100)
  telefonefixo    String?           @db.VarChar(15)
  telefonecelular String            @db.VarChar(15)
  email           String            @db.VarChar(100)
  rua             String?           @db.VarChar(100)
  bairro          String?           @db.VarChar(100)
  cidade          String?           @db.VarChar(100)
  estado          String?           @db.VarChar(2)
  senha           String            @db.VarChar(255)
  tipo_usuario    Int
  administradores administradores[]
  clientes        clientes[]
  tecnicos        tecnicos[]
}

model tecnicos {
  matricula     Int            @id(map: "pk_tecnico") @default(autoincrement())
  cargo         String         @db.VarChar(20)
  registro      String         @unique(map: "uk_registro") @db.VarChar(15)
  dataadmissao  DateTime       @db.Date
  datarecisao   DateTime?      @db.Date
  statustecnico Boolean
  cpf           String         @db.VarChar(14)
  experimentos  experimentos[]
  pessoas       pessoas        @relation(fields: [cpf], references: [cpf], onDelete: NoAction, onUpdate: NoAction, map: "fk_tec_pessoa")
}
